{"version":3,"sources":["boy.png","components/Navbar.js","components/RoomCard.js","components/Home.js","components/LandingPage.js","components/userFunction.js","components/Login.js","components/Register.js","components/Profile.js","components/Camera.js","components/Runner.js","components/Room.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","logOut","e","preventDefault","localStorage","removeItem","_this","props","history","push","loginRegLink","react_default","a","createElement","className","react_router_dom","to","userLink","href","onClick","this","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","usertoken","Component","withRouter","useStyles","makeStyles","card","minWidth","margin","padding","bullet","display","transform","title","fontSize","pos","marginBottom","SimpleCard","classes","Card","CardContent","Typography","variant","component","room","name","color","concat","player_num","CardActions","primary_k","Button","size","Home","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","newRoom","n","Date","toLocaleTimeString","roomName","window","prompt","axios","post","env","backend","headers","getItem","then","res","data","roomid","catch","err","alert","state","rooms","leaders","_this2","socket","openSocket","emit","on","setState","get","style","paddingTop","Box","textAlign","fontWeight","fontFamily","Grid","container","direction","justify","alignItems","map","leader","item","score","Divider","Fab","LandingPage","changeToSignUp","changeToSignIn","components_Home","role","register","newUser","first_name","last_name","email","password","status","includes","login","user","setItem","token","Login","onChange","defineProperty","target","value","onSubmit","undefined","success","noValidate","htmlFor","placeholder","Register","Profile","decoded","jwt_decode","src","headshot","width","Camera","setRef","webcam","getRandomizer","bottom","top","Math","floor","random","capture","canvas","getCanvas","ctx","getContext","imageDatac","getImageData","diff","count","i","length","abs","imageData","iData","ImageData","diffCanvas","document","putImageData","imageSrc","toDataURL","diffPixels","updateX","interval","setInterval","clearInterval","Paper","height","border","borderRadius","alt","react_webcam_default","audio","ref","screenshotFormat","videoConstraints","facingMode","Runner","index_es","translateX","x","friction","Room","endpoint","pixel","round","old_x","players_x","userid","end","step","countdown","newTimer","timer","judger","startTime","getTime","start","getElementsByClassName","getBoundingClientRect","toConsumableArray","obj","forEach","movement","index","winner","players","match","params","console","log","enter","reqRoomInfo","leave","assertThisInitialized","amount","roominfo","onbeforeunload","xs","player","objectSpread","active","playerid","parseInt","update","find","new_x","_this3","spacing","marginTop","components_Runner","components_Camera","App","components_Navbar","react_router","exact","path","Boolean","location","hostname","theme","createMuiTheme","palette","primary","blue","secondary","red","ReactDOM","render","MuiThemeProvider","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.103eb32c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/boy.d7fd9e0b.png\";","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom'\r\n\r\n\r\nclass Navbar extends Component {\r\n    logOut = e => {\r\n        e.preventDefault()\r\n        localStorage.removeItem('usertoken')\r\n        this.props.history.push(`/`);\r\n    }\r\n\r\n    render() {\r\n        const loginRegLink = (\r\n            <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/login\" className=\"nav-link\">\r\n                        Login\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/register\" className=\"nav-link\">\r\n                        Register\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        )\r\n        const userLink = (\r\n            <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/profile\" className=\"nav-link\">\r\n                        User\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    {/* register the event so use <a> not <Link> */}\r\n                    <a href=\"#\" onClick={this.logOut} className=\"nav-link\">\r\n                        Logout\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n        )\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <button className=\"navbar-toggler\"\r\n                    type=\"button\"\r\n                    data-toggle=\"collapse\"\r\n                    data-target=\"#navbar1\"\r\n                    aria-controls=\"navbar1\"\r\n                    aria-expanded=\"false\"\r\n                    aria-label=\"Toggle navigation\">\r\n                    <span className=\"nav-toggle-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse justify-content-md-center\" id=\"navbar1\">\r\n                    <ul className=\"navbar-nav\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/\" className=\"nav-link\">\r\n                                Home\r\n                        </Link>\r\n                        </li>\r\n                    </ul>\r\n                    {localStorage.usertoken ? userLink : loginRegLink}\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\n// use this HOC (withRouter) to solve the internal routing problem....\r\nexport default withRouter(Navbar);","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        minWidth: 240,\r\n        margin: '20px 15px',\r\n        padding: '20px'\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n});\r\n\r\nexport default function SimpleCard(props) {\r\n    const classes = useStyles();\r\n    const bull = <span className={classes.bullet}>•</span>;\r\n\r\n    return (\r\n        <Card className={classes.card}>\r\n            <CardContent>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                    {props.room.name}\r\n                </Typography>\r\n                <Typography className={classes.pos} color=\"textSecondary\">\r\n                    {`${props.room.player_num} players waiting`}\r\n                </Typography>\r\n                {/* <Typography variant=\"body2\" component=\"p\"> */}\r\n                {/*         well meaning and kindly. */}\r\n                {/*     <br /> */}\r\n                {/*         {'\"a benevolent smile\"'} */}\r\n                {/* </Typography> */}\r\n            </CardContent>\r\n            <CardActions>\r\n                <Link to={`/rooms/${props.room.primary_k}`}><Button variant=\"outlined\" size=\"small\" color='primary'> \r\n                    ENTER\r\n                </Button></Link>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Link, withRouter} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport openSocket from 'socket.io-client'\r\nimport {\r\n    Grid,\r\n    Fab,\r\n    Typography,\r\n    Box,\r\n    Divider\r\n} from '@material-ui/core'\r\nimport RoomCard from './RoomCard'\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            rooms: [],\r\n            leaders: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.socket = openSocket(window.env.backend)\r\n        this.socket.emit('enter_home')\r\n        this.socket.on('update_rooms', data => {\r\n            this.setState({rooms: data})\r\n        })\r\n        axios.get(window.env.backend + 'rooms')\r\n            .then(res => {\r\n                this.setState({rooms: res.data})\r\n            })\r\n            .catch(err => {\r\n                alert('Error in getting rooms info')\r\n                debugger\r\n            })\r\n        axios.get(window.env.backend + 'highScore')\r\n            .then(res => {\r\n                this.setState({leaders: res.data})\r\n            })\r\n            .catch(err => {\r\n                alert('Error in getting highest scores')\r\n                debugger\r\n            })\r\n    }\r\n    componentWillUnmount() {\r\n        this.socket.emit('leave_home')    \r\n    }\r\n\r\n    newRoom = () => {\r\n        var d = new Date();\r\n        var n = d.toLocaleTimeString();\r\n        let roomName = window.prompt('New room name: ', n)\r\n        if (roomName) {\r\n            axios.post(window.env.backend + 'rooms', {roomName: roomName}, {headers: {id: localStorage.getItem('id')} })\r\n                .then(res => {\r\n                    this.props.history.push(`/rooms/${res.data.roomid}`)\r\n                })\r\n                .catch(err => {\r\n                    alert('Error in Home.js')\r\n                })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{paddingTop: \"20px\"}}>\r\n                <Box textAlign=\"center\" fontWeight=\"fontWeightBold\" fontSize={36} fontFamily=\"Segoe UI\">\r\n                    Leaderboard\r\n                </Box>\r\n                <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                    style={{\r\n                        margin: \"5px auto\",\r\n                        padding: \"0 100px\"\r\n                    }}\r\n                >\r\n                {\r\n                    this.state.leaders.map(leader => (\r\n                        <Grid item style={{margin: \"10px 15px\"}}>\r\n                            <Typography component=\"div\">\r\n                                <Box textAlign=\"center\" fontWeight=\"fontWeightRegular\" fontSize={22} fontFamily=\"Segoe UI\">\r\n                                    {leader.name}\r\n                                </Box>\r\n                                <Box textAlign=\"center\" fontWeight=\"fontWeightLight\" fontSize={14} fontFamily=\"Segoe UI\">\r\n                                    {`${leader.score} ms`}\r\n                                </Box>\r\n                            </Typography>\r\n                        </Grid>\r\n                    ))\r\n                }\r\n                </Grid>\r\n                <Divider style={{margin: \"15px\"}} />\r\n                <Fab\r\n                    variant=\"extended\"\r\n                    size=\"medium\"\r\n                    color=\"primary\"\r\n                    aria-label=\"Add\"\r\n                    onClick={this.newRoom}\r\n                    style={{\r\n                        margin: \"20px auto\",\r\n                        display: \"block\"\r\n                    }}\r\n                >\r\n                    NEW ROOM       \r\n                </Fab>\r\n                    <Grid\r\n                    container\r\n                    direction=\"row\"\r\n                    justify=\"flex-start\"\r\n                    alignItems=\"flex-start\"\r\n                >\r\n                {\r\n                    this.state.rooms.map(room => (\r\n                        <Grid item>\r\n                            <RoomCard \r\n                                room={room}\r\n                            />\r\n                        </Grid>\r\n                    ))\r\n                }\r\n                </Grid>\r\n            </div>                \r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Home)\r\n\r\n","import React, { Component } from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\nimport Home from './Home'\r\n\r\nclass LandingPage extends Component {\r\n    changeToSignUp = e => {\r\n        e.preventDefault();\r\n        this.props.history.push(`/register`);\r\n    }\r\n    changeToSignIn = e => {\r\n        e.preventDefault();\r\n        this.props.history.push(`/login`);\r\n    }\r\n    \r\n    render() {\r\n        return ( \r\n            localStorage.usertoken ?\r\n            <Home />\r\n            :\r\n            <div className=\"container\">\r\n                <div className=\"jumbotron mt-5\">\r\n                    <h1 className=\"display-4\">Let's Run</h1>\r\n                    <p className=\"lead\">A competition platform for gesture-controlled racing game</p>\r\n                    <hr className=\"my-4\"></hr>\r\n                        <p className=\"lead\">\r\n                            <a className=\"btn btn-primary btn-lg\" href=\"#\" role=\"button\" onClick={this.changeToSignUp}>Sign up now!</a>\r\n                            <span></span>\r\n                            <a href=\"#\" className=\"btn btn-link\" role=\"button\" onClick={this.changeToSignIn}>Sign in</a>\r\n                        </p>\r\n                </div>\r\n\r\n\r\n            </div>\r\n                )\r\n            }\r\n        } \r\n        \r\nexport default withRouter(LandingPage)","import axios from 'axios'\nimport jwt from 'jwt-simple'\n\nexport const register = newUser => {\n    let data = {\n        first_name: newUser.first_name,\n        last_name: newUser.last_name,\n        email: newUser.email,\n        password: newUser.password\n    }\n\n    return axios\n        .post(window.env.backend + 'users/register', data)\n        .then(res => {\n            if (res.data.status && res.data.status.includes('registered')) {\n                alert(\"Registered\")\n            } else {\n                alert('Register fail. Either the email already registered or the server is down')\n            }\n        })\n        .catch(err => {alert(\"Register fail due to network or database error\")})\n}\n\n\nexport const login = user => {\n    let data = {        \n        email: user.email,\n        password: user.password\n    }\n\n    return axios\n        .post(window.env.backend + 'users/login', data)\n        .then(res => {\n            localStorage.setItem('usertoken', res.data.token)\n            localStorage.setItem('id', res.data.primary_k);\n            return res.data.token\n        })\n        .catch(err => {debugger})\n}\n\n","import React, { Component } from 'react';\r\nimport { login } from './userFunction';\r\n\r\n\r\nclass Login extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            success: 1\r\n        }\r\n\r\n        //this.onChange = this.onChange.bind(this);\r\n        //this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const user = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        }\r\n\r\n        login(user).then(res => {\r\n            if (res === localStorage.usertoken && res != undefined) {\r\n                this.setState({success: 1});\r\n                this.props.history.push(`/`)\r\n            } else {\r\n                this.setState({success: 0});\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 mt-5 mx-auto\">\r\n                        <form noValidate onSubmit={this.onSubmit}>\r\n                            <h1 className=\"h3 mb-3 font-weight-normal\">\r\n                                Please sign in\r\n                            </h1>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"email\">Email Address</label>\r\n                                <input type=\"email\"\r\n                                    className=\"form-control\"\r\n                                    name=\"email\"\r\n                                    placeholder=\"Enter email\"\r\n                                    value={this.state.email}\r\n                                    onChange={this.onChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"password\">Password</label>\r\n                                <input type=\"password\"\r\n                                    className=\"form-control\"\r\n                                    name=\"password\"\r\n                                    placeholder=\"Enter Password\"\r\n                                    value={this.state.password}\r\n                                    onChange={this.onChange}\r\n                                />\r\n                            </div>\r\n                            <button className=\"btn btn-lg btn-primary btn-block\"\r\n                                type=\"submit\">\r\n                                Sign in\r\n                            </button>\r\n                        </form>\r\n                        <br></br>\r\n                        {(this.state.success)?\r\n                            null\r\n                            : \r\n                              <div className=\"alert alert-danger\">\r\n                                <strong>Wrong Password or Invalid Account</strong> please try it again or go sign up!\r\n                              </div>}\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from 'react';\nimport { register } from './userFunction';\n\n\nclass Register extends Component {\n    constructor() {\n        super();\n        this.state = {\n            first_name: '',\n            last_name: '',\n            email: '',\n            password: ''\n        }\n\n        //this.onChange = this.onChange.bind(this);\n        //this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    onChange = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        const user = {\n            first_name: this.state.first_name,\n            last_name: this.state.last_name,\n            email: this.state.email,\n            password: this.state.password\n        }\n\n        register(user).then(res => {\n            this.props.history.push(`/login`)\n        })\n\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-6 mt-5 mx-auto\">\n                        <form noValidate onSubmit={this.onSubmit}>\n                            <h1 className=\"h3 mb-3 font-weight-normal\">\n                                Sign up!\n                            </h1>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"first_name\">First Name</label>\n                                <input type=\"text\"\n                                    className=\"form-control\"\n                                    name=\"first_name\"\n                                    placeholder=\"Enter First Name\"\n                                    value={this.state.first_name}\n                                    onChange={this.onChange}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"last_name\">Last Name</label>\n                                <input type=\"text\"\n                                    className=\"form-control\"\n                                    name=\"last_name\"\n                                    placeholder=\"Enter Last Name\"\n                                    value={this.state.last_name}\n                                    onChange={this.onChange}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"email\">Email Address</label>\n                                <input type=\"email\"\n                                    className=\"form-control\"\n                                    name=\"email\"\n                                    placeholder=\"Enter email\"\n                                    value={this.state.email}\n                                    onChange={this.onChange}\n                                />\n                            </div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"password\">Password</label>\n                                <input type=\"password\"\n                                    className=\"form-control\"\n                                    name=\"password\"\n                                    placeholder=\"Enter Password\"\n                                    value={this.state.password}\n                                    onChange={this.onChange}\n                                />\n                            </div>\n\n                            <button className=\"btn btn-lg btn-primary btn-block\"\n                                type=\"submit\">\n                                Register\n                            </button>\n                        </form>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Register;\n\n","import React, { Component } from 'react';\r\nimport jwt_decode from 'jwt-decode'\r\nimport headshot from '../boy.png'\r\n\r\nclass Profile extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            first_name: '',\r\n            last_name: '',\r\n            email: ''\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        if (localStorage.usertoken) {\r\n            const token = localStorage.usertoken;\r\n            const decoded = jwt_decode(token);\r\n            // this.setState(state =>{\r\n            //     state.first_name = decoded.first_name;\r\n            //     state.last_name = decoded.last_name;\r\n            //     state.email = decoded.email;\r\n            // })\r\n            this.setState({\r\n                first_name: decoded.first_name,\r\n                last_name: decoded.last_name,\r\n                email: decoded.email\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <br></br>\r\n                <div className=\"row no-gutters\">\r\n                    <div className=\"col-6 col-md-4\">\r\n                        <table className=\"table col-md-6 mx-auto\">\r\n                            <tbody>\r\n                                <tr className=\"\">\r\n                                        <img src={headshot} className=\"media-object\" style={{width:'120px'}}/>\r\n                                </tr>\r\n                                <br/> <br/> \r\n                                <tr>\r\n                                    <td>Frist Name</td>\r\n                                    <td>{this.state.first_name}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Last Name</td>\r\n                                    <td>{this.state.last_name}</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Email</td>\r\n                                    <td>{this.state.email}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n\r\n                    </div>\r\n                </div>\r\n                {/* <div className=\"jumbotron mt-5\">\r\n                    <div className=\"col-sm-8 mx-auto\">\r\n                        <h1 className=\"text-center\">\r\n                            Profile\r\n                        </h1>\r\n                    </div>\r\n\r\n                    <table className=\"table col-md-6 mx-auto\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>Frist Name</td>\r\n                                <td>{this.state.first_name}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Last Name</td>\r\n                                <td>{this.state.last_name}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Email</td>\r\n                                <td>{this.state.email}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Profile;\r\n","import React, { Component } from \"react\";\r\nimport Webcam from \"react-webcam\";\r\nimport {Paper} from \"@material-ui/core\"\r\n\r\nclass Camera extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            imageSrc: \"\",\r\n            imageData: [],\r\n            diffPixels: 0,\r\n        };\r\n    }\r\n\r\n    setRef = webcam => {\r\n        this.webcam = webcam;\r\n    };\r\n\r\n    getRandomizer = (bottom, top) => {\r\n        return Math.floor(Math.random() * (1 + top - bottom)) + bottom;\r\n    };\r\n    capture = () => {\r\n        const canvas = this.webcam.getCanvas();\r\n        if (canvas != null) {\r\n            let ctx = canvas.getContext(\"2d\");\r\n            let imageDatac = ctx.getImageData(0, 0, 350, 350).data;\r\n            let diff = ctx.getImageData(0, 0, 350, 350).data;\r\n            let count = 0;\r\n            for (var i = 0; i < diff.length; i++) {\r\n                let n = Math.abs(diff[i] - this.state.imageData[i]);\r\n                diff[i] = 255 - n;\r\n                if (diff[i] < 150) count++;\r\n            }\r\n            let iData = new ImageData(diff, 350, 350);\r\n            const diffCanvas = document.createElement(\"canvas\");\r\n            let diffConrtext = diffCanvas.getContext(\"2d\");\r\n            diffConrtext.putImageData(iData, 0, 0);\r\n            this.setState(\r\n                {\r\n                    imageData: imageDatac,\r\n                    imageSrc: diffCanvas.toDataURL(),\r\n                    diffPixels: count\r\n                },\r\n                this.props.updateX(this.state.diffPixels),\r\n            );\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.interval = setInterval(() => this.capture(), 10);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    render() {\r\n        const videoConstraints = {\r\n            facingMode: \"user\"\r\n        };\r\n        return (\r\n            <Paper style={{padding: \"25px\", width: \"350px\", height: \"470px\", margin: \"15px\"}}>\r\n                { this.state.imageSrc && \r\n                    <img\r\n                        style={{\r\n                            width: \"300px\",\r\n                            display: \"block\",\r\n                            border: \"solid gray 1px\",\r\n                            borderRadius: \"5px\",\r\n                        }}\r\n                        src={this.state.imageSrc}\r\n                        alt=\"loading...\"\r\n                    />\r\n                }\r\n                <Webcam\r\n                    audio={false}\r\n                    height={300}\r\n                    ref={this.setRef}\r\n                    screenshotFormat=\"image/jpeg\"\r\n                    width={300}\r\n                    videoConstraints={videoConstraints}\r\n                />\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Camera;\r\n\r\n","import React, { Component } from \"react\";\r\nimport { Animate } from \"react-rebound\";\r\nimport {\r\n    Paper,\r\n} from '@material-ui/core'\r\nimport './Runner.css'\r\n\r\nfunction Runner(props) {\r\n    return (\r\n        <Paper style={{width: \"700px\", padding: \"10px\"}}>\r\n            <span className={`gif-start`}></span>\r\n            <Animate translateX={props.x} friction={80}>\r\n                <img className={`gif-now`} style={{width: \"100px\"}} src={`${window.env.backend}gifs/4.gif`} alt=\"loading...\" />\r\n            </Animate>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default Runner;\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport {Link, withRouter} from 'react-router-dom'\r\nimport openSocket from 'socket.io-client'\r\nimport {\r\n    Typography,\r\n    Box,\r\n    Divider,\r\n    Fab,\r\n    Grid,\r\n    Paper,\r\n} from '@material-ui/core'\r\nimport './Room.css'\r\n\r\nimport { Animate } from \"react-rebound\"\r\nimport Camera from './Camera'\r\nimport Runner from './Runner'\r\nimport axios from 'axios'\r\n\r\nclass Room extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            roominfo: null,\r\n            players: [],\r\n            timer: 3,\r\n            players_x: {},\r\n        }\r\n        this.end = false\r\n        this.socket = undefined\r\n        this.userid = localStorage.getItem('id')\r\n        this.endpoint = 500\r\n    } \r\n    \r\n    componentDidMount() {\r\n        window.onbeforeunload = () => {\r\n            console.log('onbeforeunload')\r\n            // debugger\r\n            this.leave()\r\n        }\r\n\r\n        // Handling socket\r\n        this.socket = openSocket(window.env.backend)\r\n        if (this.socket !== undefined) {\r\n            this.socket.on('err', data => {\r\n                console.log(data)\r\n                this.props.history.push('/')\r\n            })\r\n            this.socket.on('resRoomInfo', data => {\r\n                this.setState({roominfo: data})\r\n            })\r\n            this.socket.on('kickout', data => {\r\n                alert('This room is not available currently')\r\n                this.props.history.push('/')\r\n            })\r\n            this.socket.on('players', data => {\r\n                this.setState({players: data})\r\n            })\r\n            this.socket.on('start', data => {\r\n                let xs = {}\r\n                this.state.players.forEach(player => {\r\n                    xs[player.id] = 0\r\n                })\r\n                this.setState(state => ({roominfo: {...state.roominfo, active: true}, players_x: xs}))\r\n                this.interval = window.setInterval(() => {this.countdown()}, 1000)\r\n            })\r\n            this.socket.on('update', data => {\r\n                let playerid = parseInt(data.id)\r\n                this.setState(state => {\r\n                    let player = state.players.find(player => player.id === playerid)\r\n                    let update\r\n                    if (player) {\r\n                        let old_x = state.players_x[player.id]\r\n                        let new_x = data.step > old_x ? data.step : old_x\r\n                        update = {\r\n                            players_x: {\r\n                                ...state.players_x,\r\n                                [player.id]: new_x\r\n                            }\r\n                        }\r\n                    } else {\r\n                        update = {}\r\n                    }\r\n                    return update\r\n                })\r\n            })\r\n\r\n            // enter the room\r\n            this.reqRoomInfo()\r\n            this.enter()            \r\n        } else {\r\n            alert('Can not connect to server via Socket.io')\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // leave the room\r\n        let id = parseInt(this.userid)\r\n        let ids = this.state.players.map(player => player.id)\r\n        if (ids.includes(id)) {\r\n            console.log('componentWillUnmount')\r\n            // debugger\r\n            this.leave()\r\n        }\r\n        window.onbeforeunload = null \r\n    }\r\n    \r\n    updateX = (diffPixels) => {\r\n        let threshold = 10\r\n        let endpoint = this.endpoint\r\n        let pixel = Math.round(diffPixels / 1000)\r\n        pixel = pixel <= threshold ? pixel : threshold\r\n       \r\n        let old_x = this.state.players_x[this.userid]\r\n        if (diffPixels && !this.end) {\r\n            this.step(old_x + pixel)\r\n        } \r\n    };\r\n    \r\n    countdown = () => {\r\n        this.setState(state => {\r\n            let newTimer = state.timer - 1\r\n            if (newTimer === 0) {\r\n                window.clearInterval(this.interval)\r\n                this.interval = window.setInterval(this.judger, 10)\r\n                this.startTime = new Date().getTime()\r\n            }\r\n            return {timer: newTimer}\r\n        })\r\n    }\r\n    \r\n    judger = () => {\r\n        let start = document.getElementsByClassName(`gif-start`)[0].getBoundingClientRect().x\r\n        let movements = [...document.getElementsByClassName(`gif-now`)].map(obj => obj.getBoundingClientRect().x - start)\r\n        movements.forEach((movement, index) => {\r\n            if (movement >= this.endpoint) {\r\n                if (!this.state.winner) {\r\n                    this.setState({ winner: this.state.players[index].name })\r\n                }\r\n                if (!this.end && this.state.players[index].id == this.userid) {\r\n                    this.end = true\r\n                    let userid = this.userid \r\n                    let roomid = this.props.match.params.roomid\r\n                    axios.post(window.env.backend + 'record', {roomid: roomid, score: new Date().getTime() - this.startTime}, {headers: {id: userid} })\r\n                        .then(res => {\r\n                            console.log('Update successes')\r\n                        })\r\n                        .catch(err => {\r\n                            alert('Error when posting record')\r\n                        })\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    enter = () => {\r\n        let userid = this.userid \r\n        let roomid = this.props.match.params.roomid\r\n        if (userid === 'undefined' || roomid === undefined) {\r\n            alert('Data not complete')\r\n        } else {\r\n            this.socket.emit('enter', {\r\n                userid: userid, \r\n                roomid: roomid\r\n            })\r\n        }\r\n    }\r\n    \r\n    reqRoomInfo = () => {\r\n        let roomid = this.props.match.params.roomid\r\n        if (roomid === undefined) {\r\n            alert('Data not complete')\r\n        } else {\r\n            this.socket.emit('reqRoomInfo', {\r\n                roomid: roomid\r\n            })\r\n        }\r\n    }\r\n\r\n    leave = () => {\r\n        // debugger\r\n        console.log('Leave')\r\n        let userid = this.userid \r\n        let roomid = this.props.match.params.roomid\r\n        if (userid === 'undefined' || roomid === undefined) {\r\n            alert('Data not complete')\r\n        } else {\r\n            let tmp = this\r\n            this.socket.emit('leave', {\r\n                userid: userid,\r\n                roomid: roomid\r\n            })\r\n        }\r\n        window.clearInterval(this.interval)\r\n    }\r\n    \r\n    start = () => {\r\n        this.socket.emit('start', {roomid: this.props.match.params.roomid})\r\n    }\r\n\r\n    step = (amount) => { \r\n        if (this.state.timer === 0) {\r\n            this.socket.emit('step', {\r\n                roomid: this.props.match.params.roomid,\r\n                userid: this.userid,\r\n                step: amount\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return ( !this.state.roominfo ? \r\n            <h3>Loading</h3>\r\n            :\r\n            !this.state.roominfo.active ?\r\n                <div>\r\n                    <Fab\r\n                        variant=\"extended\"\r\n                        size=\"medium\"\r\n                        color=\"primary\"\r\n                        aria-label=\"Add\"\r\n                        onClick={this.start}\r\n                        style={{\r\n                            margin: \"20px auto\",\r\n                            display: \"block\"\r\n                        }}\r\n                    >\r\n                        START    \r\n                    </Fab>\r\n                    <Typography component=\"div\">\r\n                        <Box className=\"title\" textAlign=\"center\" fontWeight=\"fontWeightLight\" fontSize={22} fontFamily=\"Segoe UI\">\r\n                            Room Name\r\n                        </Box>\r\n                        <Box className=\"content\" textAlign=\"center\" fontWeight=\"fontWeightHeavy\" fontSize={60} fontFamily=\"Segoe UI\">\r\n                            {this.state.roominfo.name}\r\n                        </Box>\r\n                        <Divider className=\"divider\" />\r\n                        <Box className=\"title\" textAlign=\"center\" fontWeight=\"fontWeightLight\" fontSize={22} fontFamily=\"Segoe UI\">\r\n                            Players\r\n                        </Box>\r\n                        {\r\n                            this.state.players.map(player => (\r\n                                <Box className=\"content\" textAlign=\"center\" fontWeight=\"fontWeightHeavy\" fontSize={36} fontFamily=\"Segoe UI\">\r\n                                    {player.name}\r\n                                </Box>\r\n                            ))\r\n                        }\r\n                    </Typography>\r\n                </div>\r\n                :\r\n                <div>\r\n                    <Grid container spacing={3}>\r\n                        {\r\n                            this.state.timer !== 0 ?\r\n                                <Grid item xs={8} style={{marginTop: \"50px\"}}>\r\n                                {\r\n                                    <Typography component=\"div\">\r\n                                        <Box textAlign=\"center\" fontWeight=\"fontWeightBold\" fontSize={48} fontFamily=\"Segoe UI\">\r\n                                            ARE YOU READY\r\n                                        </Box>\r\n                                        <Box textAlign=\"center\" fontWeight=\"fontWeightBold\" fontSize={200} fontFamily=\"Segoe UI\">\r\n                                            {this.state.timer}\r\n                                        </Box>\r\n                                    </Typography>\r\n                                }\r\n                                </Grid>\r\n                                :\r\n                                <Grid item xs={8}>\r\n                                    <Grid\r\n                                        container\r\n                                        direction=\"column\"\r\n                                        justify=\"flex-start\"\r\n                                        alignItems=\"center\"\r\n                                    >\r\n                                    {\r\n                                        this.state.players.map(player => (\r\n                                            <Grid item style={{marginTop: \"30px\"}}>\r\n                                                <h3><strong>{player.name}</strong></h3>\r\n                                                <Runner x={this.state.players_x[player.id]} playerid={player.id} />\r\n                                            </Grid>        \r\n                                        ))\r\n                                    }\r\n                                    </Grid>\r\n                                </Grid>\r\n                        }\r\n                        <Grid item xs={4} style={{marginTop: \"30px\"}}>\r\n                            <Grid\r\n                                container\r\n                                direction=\"column\"\r\n                                justify=\"flex-start\"\r\n                                alignItems=\"center\"\r\n                                spacing={2}\r\n                            >\r\n                                {\r\n                                    this.state.winner && \r\n                                    <Grid item>\r\n                                        <Paper>\r\n                                            <Typography component=\"div\">\r\n                                                <Box style={{width: \"350px\"}} textAlign=\"center\" fontWeight=\"fontWeightLight\" fontSize={22} fontFamily=\"Segoe UI\">\r\n                                                    WINNER\r\n                                                </Box>\r\n                                                <Box style={{width: \"350px\"}} textAlign=\"center\" fontWeight=\"fontWeightBold\" fontSize={40} fontFamily=\"Segoe UI\">\r\n                                                    {this.state.winner}\r\n                                                </Box>\r\n                                            </Typography>\r\n                                        </Paper>\r\n                                    </Grid>\r\n                                }        \r\n                                <Grid item>\r\n                                    <Camera updateX={this.updateX} />        \r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n        )\r\n    }\r\n} \r\n        \r\nexport default withRouter(Room)\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\r\n\r\nimport Navbar from './components/Navbar'\r\nimport LandingPage from './components/LandingPage'\r\nimport Login from './components/Login'\r\nimport Register from './components/Register'\r\nimport Profile from './components/Profile'\r\nimport Room from './components/Room'\r\nimport axios from 'axios'\r\n\r\n\r\nclass App extends Component{\r\n  render(){\r\n    return(\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Navbar />\r\n          <div className=\"container\">\r\n            <Route exact path=\"/\" component={LandingPage} />\r\n            <Route exact path = \"/register\" component={Register} />\r\n            <Route exact path = \"/login\" component={Login} />\r\n            <Route exact path = \"/profile\" component={Profile} />\r\n            <Route exact path = \"/rooms/:roomid\" component={Room} />\r\n          </div>\r\n        \r\n\r\n        </div>\r\n\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport {blue, red} from '@material-ui/core/colors';\r\n\r\n// Set up environment variables\r\nif (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\r\n    console.log('dev')\r\n    window.env = {\r\n        backend: `http://${window.location.hostname}:5000/`\r\n    }\r\n} else {\r\n    console.log('prduction')\r\n    window.env = {\r\n        backend: `/`\r\n    }\r\n}\r\n\r\n// Set up Material-ui theme\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: blue,\r\n        secondary: red,\r\n    },\r\n});\r\n\r\n// Render the DOM\r\nReactDOM.render(\r\n    <MuiThemeProvider theme={theme}>\r\n        <App />\r\n    </MuiThemeProvider>,\r\ndocument.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}